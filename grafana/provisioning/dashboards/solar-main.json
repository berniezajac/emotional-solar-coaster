{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": {
          "type": "grafana",
          "uid": "-- Grafana --"
        },
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "target": {
          "limit": 100,
          "matchAny": false,
          "tags": [],
          "type": "dashboard"
        },
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "fiscalYearStartMonth": 0,
  "graphTooltip": 0,
  "id": 3,
  "links": [],
  "liveNow": false,
  "panels": [
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 0
      },
      "id": 42,
      "panels": [],
      "title": "Air Quality",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 750
              },
              {
                "color": "red",
                "value": 1250
              }
            ]
          },
          "unit": "ppm"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 1
      },
      "id": 34,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"Solar\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"airthings_2960033937\")\n  |> filter(fn: (r) => r[\"_field\"] == \"co2\")\n  |> window(every: ${GRAPH_WINDOW_SIZE})\n  |> mean()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
          "refId": "A"
        }
      ],
      "title": "CO2 (ppm)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 250
              },
              {
                "color": "red",
                "value": 500
              }
            ]
          },
          "unit": "conppb"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 4,
        "y": 1
      },
      "id": 36,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"Solar\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"airthings_2960033937\")\n  |> filter(fn: (r) => r[\"_field\"] == \"voc\")\n  |> window(every: ${GRAPH_WINDOW_SIZE})\n  |> mean()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
          "refId": "A"
        }
      ],
      "title": "VOCs",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 12.1
              },
              {
                "color": "semi-dark-orange",
                "value": 35.1
              },
              {
                "color": "semi-dark-red",
                "value": 55.1
              },
              {
                "color": "dark-purple",
                "value": 150
              }
            ]
          },
          "unit": "conÎ¼gm3"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 8,
        "y": 1
      },
      "id": 43,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"Solar\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"airthings_2960033937\")\n  |> filter(fn: (r) => r[\"_field\"] == \"pm25\")\n  |> window(every: ${GRAPH_WINDOW_SIZE})\n  |> mean()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
          "refId": "A"
        }
      ],
      "title": "PM2.5",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 26
              },
              {
                "color": "red",
                "value": 30
              }
            ]
          },
          "unit": "celsius"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 12,
        "y": 1
      },
      "id": 37,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"Solar\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"airthings_2960033937\")\n  |> filter(fn: (r) => r[\"_field\"] == \"temp\")\n  |> window(every: ${GRAPH_WINDOW_SIZE})\n  |> mean()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
          "refId": "A"
        }
      ],
      "title": "Temp (current)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "yellow",
                "value": 60
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "percent"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 16,
        "y": 1
      },
      "id": 38,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"Solar\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"airthings_2960033937\")\n  |> filter(fn: (r) => r[\"_field\"] == \"humidity\")\n  |> window(every: ${GRAPH_WINDOW_SIZE})\n  |> mean()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
          "refId": "A"
        }
      ],
      "title": "Humidity (current)",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "description": "",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "pressurehpa"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 20,
        "y": 1
      },
      "id": 44,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"Solar\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"airthings_2960033937\")\n  |> filter(fn: (r) => r[\"_field\"] == \"pressure\")\n  |> window(every: ${GRAPH_WINDOW_SIZE})\n  |> mean()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
          "refId": "A"
        }
      ],
      "title": "Pressure",
      "transparent": true,
      "type": "stat"
    },
    {
      "collapsed": false,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 4
      },
      "id": 22,
      "panels": [],
      "title": "Production + Consumption",
      "type": "row"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-RdYlGr"
          },
          "mappings": [],
          "max": 5850,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "dark-red",
                "value": null
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 4,
        "x": 0,
        "y": 5
      },
      "id": 20,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"measurementType\"] == \"production\")\n  |> filter(fn: (r) => r[\"_field\"] == \"production_wNow\")\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "Current Production",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "palette-classic"
          },
          "custom": {
            "axisCenteredZero": false,
            "axisColorMode": "text",
            "axisLabel": "",
            "axisPlacement": "auto",
            "barAlignment": 0,
            "drawStyle": "line",
            "fillOpacity": 10,
            "gradientMode": "none",
            "hideFrom": {
              "legend": false,
              "tooltip": false,
              "viz": false
            },
            "lineInterpolation": "smooth",
            "lineWidth": 1,
            "pointSize": 5,
            "scaleDistribution": {
              "type": "linear"
            },
            "showPoints": "auto",
            "spanNulls": false,
            "stacking": {
              "group": "A",
              "mode": "none"
            },
            "thresholdsStyle": {
              "mode": "off"
            }
          },
          "mappings": [],
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "red",
                "value": 80
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 10,
        "w": 16,
        "x": 4,
        "y": 5
      },
      "id": 28,
      "options": {
        "legend": {
          "calcs": [],
          "displayMode": "list",
          "placement": "bottom",
          "showLegend": false
        },
        "tooltip": {
          "mode": "single",
          "sort": "none"
        }
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"production_wNow\" or r[\"_field\"] == \"totalConsumption_wNow\")\n  |> window(every: ${GRAPH_WINDOW_SIZE})\n  |> mean()\n  |> duplicate(column: \"_stop\", as: \"_time\")\n  |> window(every: inf)",
          "refId": "A"
        }
      ],
      "title": "Production vs. Consumption",
      "type": "timeseries"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [],
          "max": 55000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 4,
        "x": 20,
        "y": 5
      },
      "id": 16,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"measurementType\"] == \"total-consumption\")\n  |> filter(fn: (r) => r[\"_field\"] == \"totalConsumption_whToday\")\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "Total Consumed",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-GrYlRd"
          },
          "mappings": [],
          "max": 7000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 4,
        "x": 0,
        "y": 10
      },
      "id": 19,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"measurementType\"] == \"total-consumption\")\n  |> filter(fn: (r) => r[\"_field\"] == \"totalConsumption_wNow\")\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "Current Consumption",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "continuous-RdYlGr"
          },
          "mappings": [],
          "max": 65000,
          "min": 0,
          "thresholds": {
            "mode": "percentage",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "#EAB839",
                "value": 50
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 5,
        "w": 4,
        "x": 20,
        "y": 10
      },
      "id": 8,
      "options": {
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "showThresholdLabels": false,
        "showThresholdMarkers": true
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"measurementType\"] == \"production\")\n  |> filter(fn: (r) => r[\"_field\"] == \"production_whToday\")\n  |> last()",
          "refId": "A"
        }
      ],
      "title": "Total Production",
      "transparent": true,
      "type": "gauge"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "description": "Difference between current consumption vs. production",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 6000,
          "min": -6000,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "red",
                "value": null
              },
              {
                "color": "green",
                "value": 0
              }
            ]
          },
          "unit": "watt"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 0,
        "y": 15
      },
      "id": 18,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "from(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: v.timeRangeStart, stop: v.timeRangeStop)\n  |> filter(fn: (r) => r[\"measurementType\"] == \"net-consumption\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> last()\n  |> map(fn: (r) => ({r with _value: float(v: r._value) * -1.00 }))",
          "refId": "A"
        }
      ],
      "title": "Current â",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "description": "Total Daily Import (from the grid)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 35000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              },
              {
                "color": "super-light-yellow",
                "value": 5000
              },
              {
                "color": "yellow",
                "value": 10000
              },
              {
                "color": "orange",
                "value": 15000
              },
              {
                "color": "red",
                "value": 20000
              }
            ]
          },
          "unit": "watth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 4,
        "y": 15
      },
      "id": 46,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "import \"date\"\ntoday_utc = date.truncate(t: now(), unit: 1d)\ntoday = time(v: int(v: today_utc) + int(v: 10h))\n\nfrom(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: today, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> map(fn: (r) => ({ r with _value: if r._value < 0 then 0.0 else r._value }))\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * (20.0/3600.0) })) // converting to watt-hours\n  |> sum() // getting the total power consumed\n  |> yield(name: \"totalImport\")\n  ",
          "refId": "A"
        }
      ],
      "title": "Daily â",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "description": "Total Daily Export (to the grid)",
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 35000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "watth"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 4,
        "x": 8,
        "y": 15
      },
      "id": 47,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "import \"date\"\ntoday_utc = date.truncate(t: now(), unit: 1d)\ntoday = time(v: int(v: today_utc) + int(v: 10h))\n\nfrom(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: today, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> map(fn: (r) => ({ r with _value: if r._value > 0 then 0.0 else r._value })) // map positive values down to zero\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * (20.0/3600.0) })) // converting to watt-hours\n  |> map(fn: (r) => ({r with _value: float(v: r._value) * -1.00 }))\n  |> sum() // getting the total power exported\n",
          "refId": "A"
        }
      ],
      "title": "Daily â",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 35000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "green",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 12,
        "y": 15
      },
      "id": 48,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "import \"date\"\ntoday_utc = date.truncate(t: now(), unit: 1d)\ntoday = time(v: int(v: today_utc) + int(v: 10h))\n\nfrom(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: today, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> map(fn: (r) => ({ r with _value: if r._value > 0 then 0.0 else r._value })) // map positive values down to zero\n  |> map(fn: (r) => ({r with _value: float(v: r._value) * (20.0/3600.0) })) // converting to watt-hours\n  |> map(fn: (r) => ({r with _value: float(v: r._value) * -1.00 }))\n  |> sum() // getting the total power consumed\n  |> map(fn: (r) => ({ \n    r with _value: if r._value <= ${ELEC_EXPORT_TIER1_LIMIT}\n      then r._value * ${ELEC_EXPORT_TIER1_PER_KWH}\n      else ${ELEC_EXPORT_TIER1_LIMIT} * ${ELEC_EXPORT_TIER1_PER_KWH} + (r._value - ${ELEC_EXPORT_TIER1_LIMIT}) * ${ELEC_EXPORT_TIER2_PER_KWH} \n  })) // calculate the cost with tiered rates. 12c for first 12kWh, 5c thereafter\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 })) // convert to dollars\n  |> yield(name: \"totalDailyGridExport\")",
          "refId": "A"
        }
      ],
      "title": " â $",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 35000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 15,
        "y": 15
      },
      "id": 49,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "import \"date\"\ntoday_utc = date.truncate(t: now(), unit: 1d)\ntoday = time(v: int(v: today_utc) + int(v: 10h))\n\nfrom(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: today, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> map(fn: (r) => ({ r with _value: if r._value < 0 then 0.0 else r._value })) // map positive values down to zero\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * (20.0/3600.0)})) // converting to watt-hours\n  |> sum() // getting the total power consumed\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * (${ELEC_GENERAL_USAGE_PER_KWH}/1000.0) })) // convert into dollars\n  |> yield(name: \"totalImport\")\n  ",
          "refId": "A"
        }
      ],
      "title": "â $",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 35000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 18,
        "y": 15
      },
      "id": 50,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "import \"date\"\ntoday_utc = date.truncate(t: now(), unit: 1d)\ntoday = time(v: int(v: today_utc) + int(v: 10h))\n\nfrom(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: today, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> map(fn: (r) => ({ r with _value: if r._value < 0 then 0.0 else r._value })) // map positive values down to zero\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * (20.0/3600.0)})) // converting to watt-hours\n  |> sum() // getting the total power consumed\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * (${ELEC_GENERAL_USAGE_PER_KWH}/1000.0) })) // convert into dollars\n  |> map(fn: (r) => ({ r with _value: float(v: r._value + ${ELEC_DAILY_SUPPLY_CHARGE} + ${ELEC_SOLAR_METER_CHARGE})})) // add daily supply + solar meter charge\n  |> yield(name: \"totalImportWithCharges\")\n  ",
          "refId": "A"
        }
      ],
      "title": "â + BS $",
      "transparent": true,
      "type": "stat"
    },
    {
      "datasource": {
        "type": "influxdb",
        "uid": "PFF9E94AB878795B6"
      },
      "fieldConfig": {
        "defaults": {
          "color": {
            "mode": "thresholds"
          },
          "mappings": [],
          "max": 35000,
          "min": 0,
          "thresholds": {
            "mode": "absolute",
            "steps": [
              {
                "color": "blue",
                "value": null
              }
            ]
          },
          "unit": "currencyUSD"
        },
        "overrides": []
      },
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 21,
        "y": 15
      },
      "id": 51,
      "options": {
        "colorMode": "value",
        "graphMode": "area",
        "justifyMode": "auto",
        "orientation": "auto",
        "reduceOptions": {
          "calcs": [
            "lastNotNull"
          ],
          "fields": "/.*/",
          "values": false
        },
        "textMode": "auto"
      },
      "pluginVersion": "9.2.2",
      "targets": [
        {
          "datasource": {
            "type": "influxdb",
            "uid": "PFF9E94AB878795B6"
          },
          "query": "import \"date\"\ntoday_utc = date.truncate(t: now(), unit: 1d)\ntoday = time(v: int(v: today_utc) + int(v: 10h))\n\nELEC_EXPORT_DOLLARS_FLOAT = float(v: ${ELEC_EXPORT_DOLLARS})\n\nfrom(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: today, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> map(fn: (r) => ({ r with _value: if r._value > 0 then 0.0 else r._value })) // map positive values down to zero\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * (20.0/3600.0)})) // converting to watt-hours\n  |> sum() // getting the total power consumed\n  |> map(fn: (r) => ({ r with _value: float(v: r._value) * (${ELEC_GENERAL_USAGE_PER_KWH}/1000.0) })) // convert into dollars\n  |> map(fn: (r) => ({ r with _value: float(v: r._value + ${ELEC_DAILY_SUPPLY_CHARGE} + ${ELEC_SOLAR_METER_CHARGE})})) // add daily supply + solar meter charge\n  |> map(fn: (r) => ({ r with _value: float(v: r._value - ELEC_EXPORT_DOLLARS_FLOAT)}))\n  |> yield(name: \"totalImportWithCharges\")\n  ",
          "refId": "A"
        }
      ],
      "title": "Daily $",
      "transparent": true,
      "type": "stat"
    }
  ],
  "refresh": "10s",
  "schemaVersion": 37,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "description": "InfluxDB Bucket Name",
        "hide": 2,
        "name": "INFLUXDB_BUCKET",
        "query": "Solar",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "auto": true,
        "auto_count": 200,
        "auto_min": "10s",
        "current": {
          "selected": false,
          "text": "auto",
          "value": "$__auto_interval_GRAPH_WINDOW_SIZE"
        },
        "description": "Aggregate window size",
        "hide": 0,
        "label": "Aggregate Window Size",
        "name": "GRAPH_WINDOW_SIZE",
        "options": [
          {
            "selected": true,
            "text": "auto",
            "value": "$__auto_interval_GRAPH_WINDOW_SIZE"
          },
          {
            "selected": false,
            "text": "15s",
            "value": "15s"
          },
          {
            "selected": false,
            "text": "30s",
            "value": "30s"
          },
          {
            "selected": false,
            "text": "45s",
            "value": "45s"
          },
          {
            "selected": false,
            "text": "60s",
            "value": "60s"
          },
          {
            "selected": false,
            "text": "90s",
            "value": "90s"
          },
          {
            "selected": false,
            "text": "120s",
            "value": "120s"
          },
          {
            "selected": false,
            "text": "5m",
            "value": "5m"
          },
          {
            "selected": false,
            "text": "15m",
            "value": "15m"
          }
        ],
        "query": "15s,30s,45s,60s,90s,120s,5m,15m",
        "queryValue": "",
        "refresh": 2,
        "skipUrlSync": false,
        "type": "interval"
      },
      {
        "description": "General Usage (per kWh) (in DOLLARS)",
        "hide": 2,
        "name": "ELEC_GENERAL_USAGE_PER_KWH",
        "query": "0.32043",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "description": "Daily solar meter charge regardless of usage (in DOLLARS)",
        "hide": 2,
        "name": "ELEC_SOLAR_METER_CHARGE",
        "query": "0.08526",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "description": "Daily supply charge regardless of usage (in DOLLARS)",
        "hide": 2,
        "name": "ELEC_DAILY_SUPPLY_CHARGE",
        "query": "1.33991",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "description": "Solar export (Tier 2) - Everything after the first (X) kWh gets this lower feed in tariff (see ELEC_EXPORT_TIER1_LIMIT for initial limit) (in DOLLARS)",
        "hide": 2,
        "name": "ELEC_EXPORT_TIER2_PER_KWH",
        "query": "0.05",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "description": "Solar export (Tier 1) - The first (X) kWh get this feed in tariff (see ELEC_EXPORT_TIER1_LIMIT for limit) (in DOLLARS)",
        "hide": 2,
        "name": "ELEC_EXPORT_TIER1_PER_KWH",
        "query": "0.12",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "description": "Defines the limit of solar export that gets tier 1 feed in credit (in WATTS)",
        "hide": 2,
        "name": "ELEC_EXPORT_TIER1_LIMIT",
        "query": "12000.0",
        "skipUrlSync": false,
        "type": "constant"
      },
      {
        "current": {
          "selected": false,
          "text": "0",
          "value": "0"
        },
        "datasource": {
          "type": "influxdb",
          "uid": "PFF9E94AB878795B6"
        },
        "definition": "import \"date\"\ntoday_utc = date.truncate(t: now(), unit: 1d)\ntoday = time(v: int(v: today_utc) + int(v: 10h))\n\nfrom(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: today, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> map(fn: (r) => ({r with _value: if r._value > 0 then 0.0 else r._value })) // map positive values down to zero\n  |> map(fn: (r) => ({r with _value: float(v: r._value) * (20.0/3600.0) })) // converting to watt-hours\n  |> map(fn: (r) => ({r with _value: float(v: r._value) * -1.00 }))\n  |> sum() // getting the total power consumed\n  |> map(fn: (r) => ({ \n    r with _value: if r._value <= ${ELEC_EXPORT_TIER1_LIMIT}\n      then r._value * ${ELEC_EXPORT_TIER1_PER_KWH}\n      else ${ELEC_EXPORT_TIER1_LIMIT} * ${ELEC_EXPORT_TIER1_PER_KWH} + (r._value - ${ELEC_EXPORT_TIER1_LIMIT}) * ${ELEC_EXPORT_TIER2_PER_KWH} \n  })) // calculate the cost with tiered rates. 12c for first 12kWh, 5c thereafter\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 })) // convert to dollars\n  |> yield(name: \"totalDailyGridExport\")",
        "hide": 0,
        "includeAll": false,
        "multi": false,
        "name": "ELEC_EXPORT_DOLLARS",
        "options": [],
        "query": "import \"date\"\ntoday_utc = date.truncate(t: now(), unit: 1d)\ntoday = time(v: int(v: today_utc) + int(v: 10h))\n\nfrom(bucket: \"${INFLUXDB_BUCKET}\")\n  |> range(start: today, stop: now())\n  |> filter(fn: (r) => r[\"_measurement\"] == \"productionjson\")\n  |> filter(fn: (r) => r[\"_field\"] == \"netConsumption_wNow\")\n  |> map(fn: (r) => ({r with _value: if r._value > 0 then 0.0 else r._value })) // map positive values down to zero\n  |> map(fn: (r) => ({r with _value: float(v: r._value) * (20.0/3600.0) })) // converting to watt-hours\n  |> map(fn: (r) => ({r with _value: float(v: r._value) * -1.00 }))\n  |> sum() // getting the total power consumed\n  |> map(fn: (r) => ({ \n    r with _value: if r._value <= ${ELEC_EXPORT_TIER1_LIMIT}\n      then r._value * ${ELEC_EXPORT_TIER1_PER_KWH}\n      else ${ELEC_EXPORT_TIER1_LIMIT} * ${ELEC_EXPORT_TIER1_PER_KWH} + (r._value - ${ELEC_EXPORT_TIER1_LIMIT}) * ${ELEC_EXPORT_TIER2_PER_KWH} \n  })) // calculate the cost with tiered rates. 12c for first 12kWh, 5c thereafter\n  |> map(fn: (r) => ({ r with _value: r._value / 1000.0 })) // convert to dollars\n  |> yield(name: \"totalDailyGridExport\")",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "type": "query"
      }
    ]
  },
  "time": {
    "from": "now-3h",
    "to": "now"
  },
  "timepicker": {},
  "timezone": "",
  "title": "Emotional Solar Coaster",
  "uid": "4Nxjkgv4k",
  "version": 5,
  "weekStart": ""
}