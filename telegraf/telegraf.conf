[global_tags]

[agent]
  interval = "$DOCKER_TELEGRAF_INTERVAL"
  round_interval = true
  metric_batch_size = 1000
  metric_buffer_limit = 10000
  collection_jitter = "0s"
  flush_interval = "10s"
  flush_jitter = "0s"
  precision = "0s"
  hostname = "localhost"
  omit_hostname = false

[[outputs.influxdb_v2]]
 ## The URLs of the InfluxDB cluster nodes.
 ##
 ## Multiple URLs can be specified for a single cluster, only ONE of the
 ## urls will be written to each interval.
 ## urls exp: http://127.0.0.1:8086
 urls = ["$BASE_DB_URL"]

 ## Token for authentication.
 token = "$DOCKER_INFLUXDB_INIT_ADMIN_TOKEN"

 ## Organization is the name of the organization you wish to write to; must exist.
 organization = "$DOCKER_INFLUXDB_INIT_ORG"

 ## Destination bucket to write into.
 bucket = "$DOCKER_INFLUXDB_INIT_BUCKET"

 insecure_skip_verify = true

# Read formatted metrics from one or more HTTP endpoints
[[inputs.http]]
  interval = "$DOCKER_TELEGRAF_INTERVAL"
  urls = ["https://$ENVOY_IP/production.json?details=1"]
  tagexclude = ["url", "host"]
  method = "GET"
  insecure_skip_verify = true
  cookie_auth_url = "https://$ENVOY_IP/auth/check_jwt"
  cookie_auth_method = "GET"
  cookie_auth_headers = { "Accept" = "*/*", "Content-Type" = "application/octet-stream", "Authorization" = "Bearer $ENVOY_BEARER_TOKEN"}
  cookie_auth_renewal = "$DOCKER_TELEGRAF_AUTH_RENEW"
  data_format = "json_v2"

  [[inputs.http.json_v2]]
    measurement_name = "productionjson"
    [[inputs.http.json_v2.object]]
      path = "production.#(measurementType==production)"
      timestamp_key = "readingTime"
      tags = ["measurementType"]
      timestamp_format = "unix"
      disable_prepend_keys = false
      [inputs.http.json_v2.object.renames]
        wNow = "production_wNow"
        whToday = "production_whToday"

    [[inputs.http.json_v2.object]]
      path = "consumption.#(measurementType==total-consumption)"
      tags = ["measurementType"]
      timestamp_key = "readingTime"
      timestamp_format = "unix"
      disable_prepend_keys = false
      [inputs.http.json_v2.object.renames]
        wNow = "totalConsumption_wNow"
        whToday = "totalConsumption_whToday"

    [[inputs.http.json_v2.object]]
      path = "consumption.#(measurementType==net-consumption)"
      tags = ["measurementType"]
      timestamp_key = "readingTime"
      timestamp_format = "unix"
      disable_prepend_keys = false
      [inputs.http.json_v2.object.renames]
        wNow = "netConsumption_wNow"
        whToday = "netConsumption_whToday"

[[inputs.http]]
  interval = "$DOCKER_TELEGRAF_INTERVAL"
  urls = ["https://$ENVOY_IP/api/v1/production/inverters"]
  tagexclude = ["url", "host"]
  method = "GET"
  insecure_skip_verify = true
  cookie_auth_url = "https://$ENVOY_IP/auth/check_jwt"
  cookie_auth_method = "GET"
  cookie_auth_headers = { "Accept" = "*/*", "Content-Type" = "application/octet-stream", "Authorization" = "Bearer $ENVOY_BEARER_TOKEN"}
  cookie_auth_renewal = "$DOCKER_TELEGRAF_AUTH_RENEW"
  data_format = "json_v2"

  [[inputs.http.json_v2]]
    measurement_name = "inverters"
    [[inputs.http.json_v2.object]]
      path = "@this"
      timestamp_key = "lastReportDate"
      tags = ["serialNumber"]
      timestamp_format = "unix"
      disable_prepend_keys = true

[[inputs.http]]
  interval = "$AIRTHINGS_API_INTERVAL"
  urls = ["$AIRTHINGS_API_BASE_URL/devices/$AIRTHINGS_SERIAL_1/latest-samples"]
  tagexclude = ["url", "host"]
  method = "GET"
  insecure_skip_verify = true
  client_id = "$AIRTHINGS_OAUTH_CLIENT_ID"
  client_secret = "$AIRTHINGS_OAUTH_SECRET"
  token_url = "$AIRTHINGS_OAUTH_TOKEN_URL"
  scopes = ["$AIRTHINGS_OAUTH_SCOPE"]
  data_format = "json_v2"

  [[inputs.http.json_v2]]
    measurement_name = "airthings_$AIRTHINGS_SERIAL_1"
    [[inputs.http.json_v2.object]]
      path = "data"
      timestamp_key = "data.time"
      timestamp_format = "unix"
      disable_prepend_keys = true
